# Bubbles default configuration file.
#
# This file doubles as the default configuration and as an usage
# example. Read through it. It's mostly useful comments.
#
# Read the _man page_ for the extended descriptions of these features.
#
# If the default configuration /etc/bubbles.conf does not suit your needs, copy
# it to /home/<user>/.config/bubbles.conf
#

#
#
# KEYBINDS
#
#
# Edit/simplify/expannd these to your liking. Add or remove as many keybinds as
# you can/want.
#

# SPAWN
#
[spawn "/"]
	command = bubbles-dmenu-switcher

[spawn "`"]
	command = bubbles-dmenu-switcher -currentclass

[spawn "Return"]
	command = dmenu_path | dmenu | sh

# RUN OR RAISE
#
[runorraise "d"]
	target = dolphin
	command = fm || dolphin -stylesheet .config/qt5ct/qss/dolphin-bg.qss

[runorraise "e"]
	target = (gvim|emacs)
	command = gvim || emacs

[runorraise "i"]
	target = (Firefox|chromium)
	command = firefox || chromium
	except = Private Browsing
	name = 1

[runorraise "k"]
	target = (krita)
	command = krita

[runorraise "t"]
	target = (terminal|Urxvt|screen-256color|Xterm|alacritty)
	command = terminal || urxvt || st || xterm || alacritty

[runorraise "."]
	target = volume
	command = volume

[runorraise "l"]
	target = livecode
	command = livecode

# TEMP
#
[temp_keybinds]
	keys = s


#
#
# RULES
#
#
# IMPORTANT: leave the "*" rule (0) at the beginning or it will override the
# subsequent rules.
#
# 'state' is one of:
#	fullscreen, max, vmax, hmax, fixed, hidden
#
# 'position' is one of:
#	N, E, S, W, NE, NW, SE, SW, C (center)
#
# 'width' and 'height' specify the size of the window in pixels if >= 1
#	and the fraction of the current monitor if < 1.
#
#	Both on none have to be set in order to be valid.
#
# If 'state' is set, it will override 'position', 'width' and 'height'
#
[rules "0"]
	target = *
	state = normal

[rules "1"]
	target = ([Ff]irefox|Opera|Chromium|[Tt]resorit)
	state = fixed
	# position = N
	# width = 0.33
	# height = 1

[rules "2"]
	target = krita
	state = fullscreen

[rules "3"]
	target = (gvim|emacs)
    position = NW
    width = 0.66
    height = 1
    

[rules "4"]
	target = (Signal|Telegram)
	width = 0.4
	height = 0.5
    position = NE

[rules "5"]
	target = Switcher
	width = 650
	height = 900
	position = C

[rules "6"]
	target = volume
	width = 0.33
    height = 0.33
	position = C

[rules "7"]
	target = alacritty
	width = 0.33
    height = 1
	position = NW

[rules "8"]
	target = dolphin
	width = 0.5
    height = 1
	position = NE

#
#
# WM ACTIONS/SETTINGS
#
#
# 'autostart' Comment it if you don't need it. Use full paths.
#	/home/<user>/.config/script (NOT ~/.config/script)
#
# 'snap_threshold' is the distance at which windows will snap/magnetise/stick to
#	the border of the screen while being dragged.
#
# 'compass' will place a window in potision on the screen. See the man page for
#	an explanation. Options are: dialpad, 10key, left-hand, right-hand, none
#
#	CAREFUL: This WILL get overridden by other keybindings if they overlap.
#
# 'monitors_cmd' a shell command to run when a monitor is (dis)connected.
#	arandr, lxrandr or your favourite script should go there.
#
# 'hide_cursor' if set to 1, the cursor is hidden after certain small typing
#	activity and shown on cursor motion.
#
#	NOTE: Not all windows behave well (eg. QT-based programs) with this and
#	the behaviour can feel a bit clunky. [root] toggle_cursor helps...
#	This is disabled by default. Set to 1 to enable it.
#
[wm]
	autostart = /home/r/.config/bubbles-autostart.sh
	compass = dialpad
	snap_threshold = 32
	hide_cursor = 0

#
#
# ROOT KEYBINDS
#
#
# 'back' keybind jumps to the previous client... and back.
#
# 'quit' keybind quits bubbles and kills everything.
#
# 'focus_urgent' keybind is meant to raise the first window that has an
#	"alert/urgent/attention" hint. Not all programs use this functionality
#	when they should.
#
# 'toggle_cursor' hide or show the mouse cursor.
#
# 'cycle' go through the windows while holding MODKEY.
#
[root]
	back = b
	quit = F12
	focus_urgent = apostrophe
	toggle_cursor = space
	cycle = Tab

#
#
# CLIENT KEYBINDS
#
#
# These are the actions you can apply to the active window.
#
# 'fixate' sets the window centered and 4/5 of the size of the screen.
#
# 'above' sets the window to always try to be on top of the rest until another
#	one is marked as "above", killed, or un-set with the same keybind.
#
# 'flush_<dir>' flush or reflush the window in <dir>. See the man page under
#	FEATURES -> Cient (re)Flushing for a lengthy explanation.
#
# 'next_monitor' cycles the window through every available monitor (the order
#	for this is set by X, not us) whilst trying to preserve it's position
#	relative to the monitor sizes.
#
# 'inflate' increses a window size by 10%
#
# 'deflate' decreses a window size by 10%
#
[client]
	toggle_fullscreen = f
	toggle_fixed = x
	toggle_above = a
	hide = z
	kill = q
	maximize_vertical = v
	maximize_horizontal = h
	maximize_both = c
	flush_top = up
	flush_bottom = down
	flush_left = left
	flush_right = right
	send_next_monitor = 0
	inflate = pageup
	deflate = pagedown

#
#
# WINDOW BORDER
#
#
# Colours MUST be in Hex format. Use "" to avoid the value getting interpreted
# as a comment (#).
#
# Set 'width' to 0 for borderless windows.
#
[window_border]
	normal = "#444444"
	active = "#535d6c"
	raised = "#838d8c"
	urgent = "#600000"
	fixed = "#182A68"
	max = "#D1C664"
	above = "#D1C664"
	width = 1

#
#
# URGENT BAR
#
#
# To disable this, set the size to 0.
#
# 'size' is it's width in pixels.
#
# 'color' _must_ be a hexadecimal. (double-quote it)
#
# 'position' can be one of: "TOP", "BOTTOM", "LEFT" or "RIGHT".
#
[urgentbar]
	size = 2
	color = "#600000"
	position = BOTTOM

#
#
# DOCK
#
#
# To disable this (default), set the 'size' to 0 or comment the entire block.
#
# 'size' is it's width in pixels.
#
# 'position' can be one of: "TOP", "BOTTOM", "LEFT" or "RIGHT".
#
# 'classname' how to identify the dock. you can find out the class name with
#	$ xprop | grep WM_CLASS
#
# 'monitor' the name of the monitor where the dock is placed in case more than
#	one monitor is connected. Set to 0 to use the primary monitor set by
#	Xrandr. If only one monitor is connected, that monitor be used. Run
#	$ xrandr | grep '\ connected'
#
# 'behaviour' can be:
#	- "absolute" fullscreen windows will only use the space left by the dock
#	- with anything else, fullscreen windows will be above the dock when focused
#
[dock]
	size = 0
	position = TOP
	behaviour = absolute
	monitor = HDMI-1
	classname = dzen2
